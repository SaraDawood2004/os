#include <stdio.h>

int main() {
    int n, r, i, j, k, finish[10] = {0}, safe[10], count = 0;
    int alloc[10][5], max[10][5], need[10][5], avail[5], work[5];

    printf("Processes: "); scanf("%d", &n);
    printf("Resources: "); scanf("%d", &r);

    printf("Allocation Matrix:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < r; j++)
            scanf("%d", &alloc[i][j]);

    printf("Maximum Matrix:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < r; j++)
            scanf("%d", &max[i][j]);

    printf("Available:\n");
    for (i = 0; i < r; i++) {
        scanf("%d", &avail[i]);
        work[i] = avail[i];
    }

    for (i = 0; i < n; i++)
        for (j = 0; j < r; j++)
            need[i][j] = max[i][j] - alloc[i][j];

    while (count < n) {
        int found = 0;
        for (i = 0; i < n; i++) {
            if (!finish[i]) {
                int ok = 1;
                for (j = 0; j < r; j++)
                    if (need[i][j] > work[j]) ok = 0;
                if (ok) {
                    for (k = 0; k < r; k++)
                        work[k] += alloc[i][k];
                    safe[count++] = i;
                    finish[i] = 1;
                    found = 1;
                }
            }
        }
        if (!found) break;
    }

    if (count == n) {
        printf("Safe sequence: ");
        for (i = 0; i < n; i++) printf("P%d ", safe[i]);
    } else {
        printf("System is not in safe state.");
    }

    return 0;
}
