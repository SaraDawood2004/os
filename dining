#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

sem_t chopstick[5];

void *philosopher(void *arg) {
    int i = *(int *)arg;

    printf("Philosopher %d is thinking\n", i);
    sleep(1);

  sem_wait(&chopstick[i]);
    sem_wait(&chopstick[(i + 1) % 5]);

    printf("Philosopher %d is eating\n", i);
    sleep(2);

    sem_post(&chopstick[i]);
    sem_post(&chopstick[(i + 1) % 5]);

    printf("Philosopher %d finished eating\n", i);

    return NULL;
}

int main() {
    pthread_t t[5];
    int i, id[5];

    for (i = 0; i < 5; i++)
        sem_init(&chopstick[i], 0, 1);

    for (i = 0; i < 5; i++) {
        id[i] = i;
        pthread_create(&t[i], NULL, philosopher, &id[i]);
    }

    for (i = 0; i < 5; i++)
        pthread_join(t[i], NULL);

    return 0;
}
