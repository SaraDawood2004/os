#include <stdio.h>

struct process {
    int pid, pr, bt, st, ft, wt;
} p[10], temp;

int n;

void getInput() {
    for (int i = 0; i < n; i++) {
        p[i].pid = i + 1;
        printf("Enter burst time and priority for process %d: ", i + 1);
        scanf("%d%d", &p[i].bt, &p[i].pr);
    }
}

void priorityScheduling() {
    // Sort by priority (lower number = higher priority)
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (p[i].pr > p[j].pr) {
                temp = p[i];
                p[i] = p[j];
                p[j] = temp;
            }
        }
    }

    for (int i = 0; i < n; i++) {
        if (i == 0)
            p[i].st = 0;
        else
            p[i].st = p[i - 1].ft;

        p[i].ft = p[i].st + p[i].bt;
        p[i].wt = p[i].st;
    }
}

void display() {
    int total_wt = 0, total_tat = 0;
    printf("\nPriority Scheduling Result:\n");
    printf("PID\tPriority\tBurst\tStart\tFinish\tWait\n");

    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t%d\t%d\t%d\n", p[i].pid, p[i].pr, p[i].bt, p[i].st, p[i].ft, p[i].wt);
        total_wt += p[i].wt;
        total_tat += p[i].ft;
    }

    printf("\nAverage Waiting Time: %.2f", (float)total_wt / n);
    printf("\nAverage Turnaround Time: %.2f\n", (float)total_tat / n);
}

int main() {
    printf("Enter number of processes: ");
    scanf("%d", &n);

    getInput();
    priorityScheduling();
    display();

    return 0;
}
